swagger: "2.0"
info:
  version: "0.0.1"
  title: Fetch API
# during dev, should point to your local machine
host: localhost:8080
# basePath prefixes all resource paths 
basePath: /
# 
tags:
- name: "admins"
  description: "Secured Admin-only calls"
- name: "developers"
  description: "Operations available to regular developers"
schemes:
  # tip: remove http to make production-grade
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
# securityDefinitions:
#   UserSecurity:
#     type: "apiKey"
#     in: header
#     name: SIMPLE-API-KEY
#   AdminSecurity:
#     type: apiKey
#     in: header
#     name: ADMIN-API-KEY
paths:
  /site:
    x-swagger-router-controller: site
    get:
      tags:
      - "developers"
      summary: "Get List of sites"
      operationId: "searchSites"
      parameters:
        - in: query
          required: false
          name: zip
          type: integer
          description: "search based on zip code for site"
        - in: query
          required: false
          name: paws
          type: integer
          description: "search based on review score"
        - in: query
          required: false
          name: typeOf
          type: string
          description: "search based on type of site"
        - in: query
          required: false
          name: city
          type: string
          description: "search based on city of site"
      produces:
      - "application/json"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SearchSites"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags:
      - "admins"
      summary: "Add new site"
      operationId: "postNewSite"
      parameters:
        - name: site
          in: body
          schema:
            $ref: "#/definitions/Site"
      responses:
        200:
          description: "Sucessfully added site"
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponseJSON"
    delete:
      tags:
      - "admins"
      summary: "Delete site"
      operationId: "deleteSite"
      parameters:
        - name: site
          in: body
          schema:
            $ref: "#/definitions/Site"
      responses:
        200:
          description: "Sucessfully deleted site"
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponseJSON"
  /comments:
    x-swagger-router-controller: comments
    post:
      tags:
      - "developers"
      summary: "Add comments"
      operationId: "addComment"
      parameters:
        - name: comment
          in: body
          required: true
          description: "Add user review in comments to site"
          schema:
            $ref: "#/definitions/Site"
      responses:
        200:
          description: "Sucessfully updated site with comment"
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
      - "developers"
      summary: "Delete comments"
      operationId: "deleteComment"
      parameters:
        - name: comment
          in: body
          required: true
          description: "Delete user comments from site"
          schema:
            $ref: "#/definitions/Comment"
      responses:
        200:
          description: "Sucessfully deleted comment"
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /paws:
    x-swagger-router-controller: paws
    post:
      tags:
      - "developers"
      summary: "Add paws"
      operationId: "addpaws"
      # security:
      # - UserSecurity: []
      # x-security-scopes: 
      # - developers  
      parameters:
        - name: site
          in: body
          required: true
          description: "Add user review in paws to site"
          schema:
            $ref: "#/definitions/Site"
      responses:
        200:
          description: "Sucessfully updated paws"
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
      - "developers"
      summary: "Take paws"
      operationId: "takepaws"
      parameters:
        - name: site
          in: body
          required: true
          description: "Take user review in paws to site"
          schema:
            $ref: "#/definitions/Site"
      responses:
        200:
          description: "Sucessfully updated paws"
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user:
    x-swagger-router-controller: users
    get:
      tags:
      - "admins"
      summary: "Gets list of users"
      operationId: "listUsers"
      produces:
      - "application/json"
      responses:
        "200":
          description: Sucess
          schema:
            $ref: "#/definitions/GetUserListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags:
      - "admins"
      summary: "Add user to database"
      operationId: "createUser"
      parameters:
        - name: user
          in: body
          required: true
          description: New User details to add
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: "Successfully added user"
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /hello: 
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  GetUserListResponse:
    required:
      - users
    properties:
      users:
        type: array
        items:
          $ref: "#/definitions/User"
  SearchSites:
    required:
      - sites
    properties:
      sites:
        type: array
        items:
          $ref: "#/definitions/Site"
  User:
    required:
      - username
      - email
    properties:
      username:
        type: string
        description: User name
      email:
        type: string
        description: User email
      password:
        type: string
      company:
        type: string
      usage:
        type: string
  Site:
    required:
      - siteName
    properties:
      id:
        type: string
      siteName:
        type: string
      typeOf:
        type: string
      googleID:
        type: string
      website:
        type: string
      phone:
        type: string
      image:
        type: string
      address:
        type: object
        properties:
          street:
            type: string
          city:
            type: string
          state:
            type: string
          zip:
            type: number
      paws:
        type: number
      voteCount:
        type: number
  Comment:
    required:
      - id
    properties:
      comment:
        type: string
      id:
        type: string
      user:
        type: string
    

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string

  ErrorResponseJSON:
    required:
      - message
    properties:
      message:
        type: object

# security:
#   - apiKey: ["himom"]
#     appId: []